- name: Check Dashboards
  shell: gcloud monitoring dashboards list --filter="displayName='Ghost Monitoring'"
  register: result
  retries: 10
  delay: 10

- name: Change File
  template:
    src:  roles/monitoring/templates/monit_file.yml
    dest: roles/monitoring/templates/monit_file.json

- name: Create Dashboard
  shell: "gcloud monitoring dashboards create --config-from-file=roles/monitoring/templates/monit_file.json"
  when: result.stdout == ""

- name: Get First Node
  shell: kubectl get nodes -o jsonpath='{.items[0].metadata.name}'
  register: firstNode

- name: Get Second Node
  shell: kubectl get nodes -o jsonpath='{.items[1].metadata.name}'
  register: secondNode

- name: Delete old files
  shell: |
    if test -d google_cloud_ops_agent_provisioning/ ; then rm -r google_cloud_ops_agent_provisioning ; fi
    if test -f mass-provision-google-cloud-ops-agents.py ; then rm mass-provision-google-cloud-ops-agents.py ; fi

- name: Create Agents
  shell: |
    :> roles/monitoring/templates/agents_to_install.csv
    echo '"projects/{{ gcp_project }}/zones/{{ gcp_zone }}/instances/{{ firstNode.stdout }}","[{""type"":""ops-agent""}]"' >> roles/monitoring/templates/agents_to_install.csv
    curl -sSO https://dl.google.com/cloudagents/mass-provision-google-cloud-ops-agents.py
    python3 mass-provision-google-cloud-ops-agents.py --file roles/monitoring/templates/agents_to_install.csv
    :> roles/monitoring/templates/agents_to_install.csv
    echo '"projects/{{ gcp_project }}/zones/{{ gcp_zone }}/instances/{{ secondNode.stdout }}","[{""type"":""ops-agent""}]"' >> roles/monitoring/templates/agents_to_install.csv
    curl -sSO https://dl.google.com/cloudagents/mass-provision-google-cloud-ops-agents.py
    python3 mass-provision-google-cloud-ops-agents.py --file roles/monitoring/templates/agents_to_install.csv